/**
 * Email Service Utility
 * Handles sending emails via nodemailer
 */

const nodemailer = require('nodemailer');

// Email configuration from environment variables
const EMAIL_HOST = process.env.EMAIL_HOST || 'smtp.gmail.com';
const EMAIL_PORT = process.env.EMAIL_PORT || 587;
const EMAIL_USER = process.env.EMAIL_USER;
const EMAIL_PASS = process.env.EMAIL_PASS;
const EMAIL_FROM = process.env.EMAIL_FROM || 'noreply@jobsai.com';

/**
 * Creates a transporter for sending emails
 * @returns {object} Nodemailer transporter
 */
const createTransporter = () => {
  // In development, use ethereal.email for testing
  if (process.env.NODE_ENV === 'development' && !EMAIL_USER) {
    return nodemailer.createTransport({
      host: 'smtp.ethereal.email',
      port: 587,
      secure: false,
      auth: {
        user: 'ethereal.user@ethereal.email', // Generated by Ethereal
        pass: 'ethereal.password' // Generated by Ethereal
      }
    });
  }
  
  // In production, use configured email provider
  return nodemailer.createTransport({
    host: EMAIL_HOST,
    port: EMAIL_PORT,
    secure: EMAIL_PORT === 465, // true for 465, false for other ports
    auth: {
      user: EMAIL_USER,
      pass: EMAIL_PASS
    }
  });
};

/**
 * Sends an email
 * @param {object} options - Email options (to, subject, text, html)
 * @returns {Promise} Promise with send result
 */
const sendEmail = async (options) => {
  try {
    const { to, subject, text, html } = options;
    
    // Create transporter
    const transporter = createTransporter();
    
    // Set email options
    const mailOptions = {
      from: EMAIL_FROM,
      to,
      subject,
      text,
      html
    };
    
    // Send email
    const info = await transporter.sendMail(mailOptions);
    
    // Log URL in development (for ethereal.email)
    if (process.env.NODE_ENV === 'development' && !EMAIL_USER) {
      console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));
    }
    
    return info;
  } catch (error) {
    console.error('Email send error:', error);
    throw error;
  }
};

module.exports = sendEmail;